Your task is to split the chocolate bar of given dimension n x m into small squares. Each square is of size 1x1 and unbreakable. Implement a function that will return minimum number of breaks needed.

For example if you are given a chocolate bar of size 2 x 1 you can split it to single squares in just one break, but for size 3 x 1 you must do two breaks.

If input data is invalid you should return 0 (as in no breaks are needed if we do not have any chocolate to split). Input will always be a non-negative integer.


//We need to return the minimum number of breaks needed to obtain a 1 x 1 piece and stop there.
//I noticed a pattern right away with the examples where n * m - 1 gave us the solution, so I plugged that in and set up a conditionals for when the values are 0, negative, or already 1 x 1. 





function breakChocolate(n,m) {
  if (n <= 0 || m <= 0){
    return 0;
  }
  if (n === 1 && m === 1){
    return 0;
  }
  
  
  return (n * m) - 1;
}
