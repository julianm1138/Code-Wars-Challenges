Bob has written a function to detect the type of an object. It receives any primitive values or objects, and returns its object type as a string. 
But it seems to be working incorrectly. Can you figure out why, and fix the code for him?


function objectType(obj = null) { //if no arguments are passed, defaults to null
  return Object.prototype.toString.call(obj);
}



//This was a debugging/modification challenge where it kept returning '[Object null]' when the input was returning '[Object undefined]' 
//This was due to setting the input to null if argument.length === 0. Because an undefined value by default has an argument length of 0 so it wouldn't be able to differentiate between Null and Undefined. 
//If we remove the default behavior of when there are no arguments passed and place a conditional inside Object.prototype.toString.call that should return the correct object type for undefined. 


function objectType(obj) {
  
 return Object.prototype.toString.call(arguments.length == 0 ? null : obj);

}

//if there is no argument, it should then return null, otherwise return whatever other object was passed into the function. 
