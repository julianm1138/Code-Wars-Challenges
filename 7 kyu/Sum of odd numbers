Given the triangle of consecutive odd numbers:

             1
          3     5
       7     9    11
   13    15    17    19
21    23    25    27    29
...
Calculate the sum of the numbers in the nth row of this triangle (starting at index 1) e.g.: (Input --> Output)

1 -->  1
2 --> 3 + 5 = 8


//My first thought is to create a loop and increment by 2 but that wasn't working. If we try to solve using mathematical patterns instead, we can try powers. 
//If the argument is 2 and and we try squaring we get 2 * 2 = 4
//But if the argument is 2 and we try cubing we get 2 * 2 = 4 * 2 = 8 which outputs the correct result. The pattern is applicable to every argument. 







function rowSumOddNumbers(n) {
  return n * n * n;
  
}

rowSumOddNumbers(2);


//Input is a positive integer -> positive integer 
//Every number is odd and increments by 2 
//Every n === number of elements 

//n === 2 
//2 elements that increment by 2 starting from the last integer in sequence 

//n === 6 
//6 elements 
//Increments by 2 starting from the last integer in sequence 
