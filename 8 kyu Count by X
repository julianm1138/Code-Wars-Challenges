function countBy(x, n) {
  
  
  let z = [];
  for (i = 1; i <= n; i++)
    
    z.push(x * i);

  return z;
}

//Instructions: Create a function with two arguments that will return an array of the first n multiples of x.

Assume both the given number and the number of times to count will be positive numbers greater than 0.

Return the results as an array or list ( depending on language ).

Examples
countBy(1,10) === [1,2,3,4,5,6,7,8,9,10]
countBy(2,5) === [2,4,6,8,10]


//Most Code Wars instrutions are kinda confusing so I just jump to the exmamples and try to reverse engineer the solution by getting code by checking the solution in the examples, but the key to solving this problem is knowing what multiples are. 
//The instructions in English are: for every instance of n multiply x by n up until and including the final n. 
//We make an empty array to store the mutilples. 
//We use a for loop to iterate through n. Any time there is an n or nth problem my brain automatically thinks I need to iterate through the input, because there could be any number of it and we need to account for each.
//We invoke push method on the empty array and mutliply x by the index of the for loop which essentially multpies every number in n from index 0 to array.length - 1. (From start to finish) 
//So if we call countBy(1,10) there are 10 instances of n so we multiply 1 by every number until and including 10. Like this: 1*1, then 1*2, then 1*3, etc. up until and including 10 and return each result to the array. 
//if we call countBy(2,5) there are 5 instances of n so we multiply 2 by every number until and including 5 and push each result to the array.
