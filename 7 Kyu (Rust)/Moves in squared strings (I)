You are given a string of n lines, each substring being n characters long: For example:

s = "abcd\nefgh\nijkl\nmnop"

We will study some transformations of this square of strings.

Vertical mirror: vert_mirror (or vertMirror or vert-mirror)
vert_mirror(s) => "dcba\nhgfe\nlkji\nponm"
Horizontal mirror: hor_mirror (or horMirror or hor-mirror)
 hor_mirror(s) => "mnop\nijkl\nefgh\nabcd"


// We can solve vert_mirror by splitting the strings into new lines, reversing each string (characters) and joining them
// We can solve hor_mirror by splitting the strings into new lines, reversing the order of the strings, and joining them 

 fn vert_mirror(s: String) -> String {
    s.lines()
        .map(|line| line.chars().rev().collect::<String>())
        .collect::<Vec<String>>()
        .join("\n")
}

fn hor_mirror(s: String) -> String {
    s.lines()
        .rev()
        .map(|line| line.to_string())
        .collect::<Vec<String>>()
        .join("\n")
}

 fn oper(f: fn(String) -> String, s: String) -> String {
    f(s)
}
