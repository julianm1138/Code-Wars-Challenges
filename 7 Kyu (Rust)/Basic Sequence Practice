Complete the function that takes an integer n and returns a list/array of length abs(n) + 1 of the arithmetic series explained above. Whenn < 0 return the sequence with negative terms.

// We can solve this by looping through the range from 0 to n
// On each integer we can add the sum to the current number (which gives a cumulative effect where each number pushed to the vector is the sum of the current number and the previous sum
// 0 + 0, 1 + 0, 2 + 1, 3 + 3

fn sum_of_n(n: i32) -> Vec<i32> {
 
    let mut result = Vec::new();
    let mut sum = 0;  
    
    for num in 0..=n.abs() {
        sum += num;     
        result.push(sum);
    }
    
    if n < 0 {
        result = result.into_iter().map(|x| -x).collect::<Vec<i32>>();
    }
    result
}
