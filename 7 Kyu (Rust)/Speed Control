Given s and x the task is to return as an integer the *floor* of the maximum average speed per hour obtained on the sections of x. If x length is less than or equal to 1 return 0 since the car didn't move.

// We can solve this by getting every two values in x and use the given (3600 * delta_distance) / s
// Then get the max value of the avg hourly speeds


fn gps(s: i32, x: Vec<f64>) -> i32 {
    
    if x.len() <= 1 {return 0;}
    
    let avg_hourly_speeds: Vec<f64>  = x.windows(2)
        .map(|pair| 3600.0 * (pair[0] - pair[1]).abs() / s as f64)
        .collect();
    
    avg_hourly_speeds.into_iter()
    .max_by(|a, b| a.partial_cmp(b).unwrap())
    .unwrap_or(0.0)
    .floor() as i32
    
}
