Build a pyramid-shaped tower, as an array/list of strings, given a positive integer number of floors. A tower block is represented with "*" character.

For example, a tower with 3 floors looks like this:

[
  "  *  ",
  " *** ", 
  "*****"
]

//We need to create an array of a strings where the first asterisk is 1 and the second is + 2 and third is + 2. 
//Therefore the pattern adds 2 on every iteration up to nFloors. We also need spaces on the left and right of every element except for the final element.
//To create this we can loop from 0 to nFloors and use math to create the spaces and stars.
//To make the spaces needed we can repeat a space for n - i - 1 which would give us two spaces.
//We can get one star by multiplying i by 2 and subtracting 1, and this algorithm works for nFloors.
//Finally we concatenate the spaces and stars in the order needed






function towerBuilder(nFloors) {
  let result = [];
  
  for (let i = 0; i < nFloors; i++) {
    let spaces = ' '.repeat(nFloors - i - 1);
    let stars = '*'.repeat(2 * i + 1);
    result.push(spaces + stars + spaces);
  }
  
  return result;
}

console.log(towerBuilder(3));
