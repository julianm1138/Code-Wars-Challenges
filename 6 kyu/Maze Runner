You will be given a 2D array of the maze and an array of directions. Your task is to follow the directions given. If you reach the end point before all your moves have gone, you should return Finish. If you hit any walls or go outside the maze border, you should return Dead. If you find yourself still in the maze after using all the moves, you should return Lost.

//We can solve this by creating 2 variables to hold the coordinates of our character in the maze, looping through the maze using a nested loop, looping through the directions array, and checking conditions for Finish, Dead, and Lost.

//Assign our variables to 0.
//Check the start point and assign the variables to the i and j of the nested loops. 
// Loop through the array of directions and add or subtract 1 from the coordinate based on the direction.
// If we are out of bounds or hit a 1, return "Dead".
// If we are located at 3, return "Finish", else return "Lost".


function mazeRunner(maze, directions) {
  let [x, y] = [0, 0];

  for (let i = 0; i < maze.length; i++) {
    for (let j = 0; j < maze[i].length; j++) {
      if (maze[i][j] === 2) {
        x = i;
        y = j;
      }
    }
  }

  for (const direction of directions) {
    if (direction === "N") {
      x -= 1;
    } else if (direction === "E") {
      y += 1;
    } else if (direction === "W") {
      y -= 1;
    } else if (direction === "S") {
      x += 1;
    }

    if (x < 0 || x >= maze.length || y < 0 || y >= maze[0].length) {
      return "Dead";
    }
    if (maze[x][y] === 1) {
      return "Dead";
    }
    if (maze[x][y] === 3) {
      return "Finish";
    }
  }

  return "Lost";
}
