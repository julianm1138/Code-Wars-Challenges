Write a function that accepts two square matrices (N x N two dimensional arrays), and return the sum of the two. Both matrices being passed into the function will be of size N x N (square), containing only integers.

How to sum two matrices:

Take each cell [n][m] from the first matrix, and add it with the same [n][m] cell from the second matrix. This will be cell [n][m] of the solution matrix. (Except for C where solution matrix will be a 1d pseudo-multidimensional array).


//We can solve this by taking the sum of a[i] + b[1], creating a new array of the sums, and creating chunks of the original array length.
//Flatten each input.
//Get the sum of a[i] + b[i].
//Create chunks of the original array length.


function matrixAddition(a, b){
  
  let subArrLength = a[0].length;
  
  let result = [];
  
  const firstArr = a.flat();
 
  const secondArr = b.flat();
  
  let sums = [];
  
  for (let i = 0; i < firstArr.length; i++) {
    sums.push(firstArr[i] + secondArr[i]);
  }
  
  for (let i = 0; i < sums.length; i += subArrLength) {
    result.push(sums.slice(i, i + subArrLength));
  }
  return result
}
console.log(matrixAddition([ [1, 2],
    [1, 2] ], [ [2, 3],
    [2, 3] ]))
