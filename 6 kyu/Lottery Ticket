Given a lottery ticket (ticket), represented by an array of 2-value arrays, you must find out if you've won the jackpot.

Example ticket:

[ [ 'ABC', 65 ], [ 'HGR', 74 ], [ 'BYHT', 74 ] ]
To do this, you must first count the 'mini-wins' on your ticket. Each subarray has both a string and a number within it. If the character code of any of the characters in the string matches the number, you get a mini win. Note you can only have one mini win per sub array.

Once you have counted all of your mini wins, compare that number to the other input provided (win). If your total is more than or equal to (win), return 'Winner!'. Else return 'Loser!'.

//We can solve this by looping through the outer array and then indexing into the first and second element of each subarray.
//Then loop through the length of the first element of each subarray.
//Check if each character's charcode is equal to the second element of the subarray, if so increment count.
//If count is greater than or equal to the win, return wniner else return loser. 


function bingo(ticket, win){

    let count = 0;
  
    for (const entry of ticket) {
     const string = entry[0];
     const number = entry[1];
    
    for (let i = 0; i < string.length; i++) {
     if (string[i].charCodeAt() === number) {
       count++;
      }     
    }
  }
  return count >= win ? 'Winner!' : 'Loser!';
}
