Write a function that outputs the transpose of a matrix - a new matrix where the columns and rows of the original are swapped.

For example, the transpose of:

| 1 2 3 |
| 4 5 6 |
is

| 1 4 |
| 2 5 |
| 3 6 |

//We need a way to rearrange each row and column. We can use a nested loop, but if we simply go for the length of the matrix, that would result in out of bounds errors because matrix.length is the number of arrays in the matrix, but not the number of columns. If we create not enough subarrays with numbers, we will end up getting subarrays containing undefined. We can get the number of columns with matrix[0].length.
//From there we can loop through each j element for the matrix length and construct our new subarrays with matrix[j][i]. 



function transpose(matrix) {
  
 let result = [];
  
  for (let i = 0; i < matrix[0].length; i++) {
    let arr = [];
  result.push(arr);
    for (let j = 0; j < matrix.length; j++) {
      arr.push(matrix[j][i]);
    }
  }
  return result;
}
console.log(transpose([[1,2,3],[4,5,6]]))
