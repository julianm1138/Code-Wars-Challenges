Find the sum of the digits of all the numbers from 1 to N (both ends included).

Examples
# N = 4
1 + 2 + 3 + 4 = 10

# N = 10
1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + (1 + 0) = 46

# N = 12
1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + (1 + 0) + (1 + 1) + (1 + 2) = 51

// To solve this we need to get the sum of all individual digits.
// We can do this by creating an array of the integers from 1 to n, converting the array of integers into an array of individual characters, and getting the sum of the number version of each of the individual characters.

function twistedSum(n) {
  
  let arr = [];
  for (let i = 1; i <= n; i++) {
    arr.push(i);
  }
  const strArr = arr.map(num => num.toString().split('')).flat();
  const result = strArr.reduce((acc, currVal) => acc + Number(currVal), 0);
  return result;
}
