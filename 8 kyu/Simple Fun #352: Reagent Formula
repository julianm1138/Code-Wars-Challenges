Now we will confect a reagent. There are eight materials to choose from, numbered 1,2,..., 8 respectively.

We know the rules of confect:

material1 and material2 cannot be selected at the same time
material3 and material4 cannot be selected at the same time
material5 and material6 must be selected at the same time
material7 or  material8 must be selected(at least one, or both)
Task
You are given a integer array formula. Array contains only digits 1-8 that represents material 1-8. Your task is to determine if the formula is valid. Returns true if it's valid, false otherwise.




//I made variables to hold each rule and then return the results. The results should return in a boolean context by default. 
//1 && 2 cannot be present at the same time so we use negation to model that rule 
//3 && 4 cannot be present at the same time so we use negation to model that rule 
//5 && 6 must be present at the same time so we use === to check if the presence of 5 === presence of 6
//7 || 8 must be present so we model that directly 

Things I learned: 

- You can use associative words to model plain english in JS. 
- Ex. material1 and material2 cannot be selected at the same time can be modeled to formula.includes(1) && formula.includes(2) 
- "cannot" can be thought of as ! (negatiion of "can" or "is") so if they cannot have both then you can write it as "cannot"( include 1 && include 2) or !(include 1 && include 2) 


function isValid(formula){
  
const ruleOne = !(formula.includes(1) && formula.includes(2));
const ruleTwo = !(formula.includes(3) && formula.includes(4));
const ruleThree = formula.includes(5) === formula.includes(6);
const ruleFour = formula.includes(7) || formula.includes(8);

const results = ruleOne && ruleTwo && ruleThree && ruleFour;

return results; 
  }
